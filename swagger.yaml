openapi: 3.0.3
info:
  title: Jobs API
  version: '1.0'
  description: >
    This API allows users to manage job postings, including user authentication 
    (registration and login) and job creation, retrieval, update, and deletion.
servers:
  - url: https://jobs-api-9z7l.onrender.com/
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register a new user
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            example:
              name: sam
              email: sam11@gmail.com
              password: jfhbjldd
      responses:
        '200':
          description: User registered successfully.

  /auth/login:
    post:
      tags:
        - auth
      summary: Login an existing user
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            example:
              name: pete
              email: pet11@gmail.com
              password: jfhbjfdd
      responses:
        '200':
          description: User logged in successfully.

  /jobs:
    post:
      tags:
        - jobs
      summary: Create a new job posting
      operationId: createJob
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
            example:
              company: Netflix
              position: back-end
      responses:
        '200':
          description: Job created successfully.

    get:
      tags:
        - jobs
      summary: Retrieve all job postings
      operationId: getAllJobs
      responses:
        '200':
          description: A list of all job postings retrieved successfully.

  /jobs/{jobId}:
    parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - jobs
      summary: Get a specific job posting by ID
      operationId: getJobById
      responses:
        '200':
          description: Job posting retrieved successfully.

    patch:
      tags:
        - jobs
      summary: Update an existing job posting
      operationId: updateJob
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
            example:
              company: random
              position: full-stack
      responses:
        '200':
          description: Job posting updated successfully.

    delete:
      tags:
        - jobs
      summary: Delete a job posting
      operationId: deleteJob
      responses:
        '200':
          description: Job posting deleted successfully.

components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          description: The name of the user.
        email:
          type: string
          description: The email address of the user.
        password:
          type: string
          description: The password for the user account.

    CreateJobRequest:
      type: object
      required:
        - company
        - position
      properties:
        company:
          type: string
          description: The name of the company offering the job.
        position:
          type: string
          description: The position title of the job.

    LoginRequest:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          description: The name of the user.
        email:
          type: string
          description: The email address of the user.
        password:
          type: string
          description: The password for the user account.

  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      description: Use a bearer token for authentication.

security: []
tags:
  - name: auth
    description: Endpoints for user authentication (registration and login).
  - name: jobs
    description: Endpoints for managing job postings (create, retrieve, update, delete).
